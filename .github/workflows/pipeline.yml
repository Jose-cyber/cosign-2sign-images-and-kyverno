name: Docker Image CI

on:
  push:
    branches:
        - "master"
    paths:
        - 'app/**'

jobs:
  unit_test:
    name: unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Altere para a vers√£o que sua app usa

      - name: Install dependencies
        run: cd app && npm install 

      - name: Run Unit Tests with Jest
        run: cd app && npm install -g jest && npm run test

  build_and_push_to_registry:
    name: Build and Push docker image
    runs-on: ubuntu-latest
    needs: unit_test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: app
          file: ./app/Dockerfile
          push: true
          tags: josecyber/app-image-signed:${{ github.sha }}
  
  sign_image_using_cosign:
    name: Sign image using cosign
    runs-on: ubuntu-latest
    needs: build_and_push_to_registry
    steps:      
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install jq
        run: sudo apt install jq -y
      
      - name: Setup Cosign
        uses: sigstore/cosign-installer@v3.5.0
      
      
      - name: Sign Docker image with Cosign
        env:
          COSIGN_PASSWORD: ""
        run: |
          latest_image="josecyber/app-image-signed:${{ github.sha }}"
          
          docker pull $latest_image
          
          digest=$(docker inspect $latest_image | jq -r '.[0].RepoDigests[0]')
          
          cosign sign --key .keys/cosign.key $digest -y